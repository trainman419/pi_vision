<<<<<<< .mine
<launch>

    <!-- Make sure simulated time is off -->
    <param name="/use_sim_time" value="True" />
    
 	<!-- Use the joint state publisher and robot state publisher so we can see the robot in RViz. -->
<!--
	<param name="robot_description" command="cat $(find pi_robot)/urdf/pi_robot_urdf.xml" />
	<param name="/use_gui" value="True" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" /> 
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" />
-->
    
  	<!-- Run the map server with a blank map -->
<!--
  	<node name="map_server" pkg="map_server" type="map_server" args="$(find pi_robot)/maps/blank_map.yaml"/>
-->

    <!-- Load all the costmap parameters for use with the base_local_planner -->
<!--
    <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
	    <rosparam file="$(find pi_robot)/params/costmap_common_params.yaml" command="load" ns="global_costmap" />
	    <rosparam file="$(find pi_robot)/params/costmap_common_params.yaml" command="load" ns="local_costmap" />
	    <rosparam file="$(find pi_robot)/params/local_costmap_params.yaml" command="load" />
	    <rosparam file="$(find pi_robot)/params/global_costmap_params.yaml" command="load" />
	    <rosparam file="$(find pi_robot)/params/base_local_planner_params.yaml" command="load" />
	</node>
	
	<node name="gmapping" pkg="gmapping" type="slam_gmapping" args="scan:=base_scan" output="screen">
		<param name="linearUpdate" value="0.1" />
		<param name="angularUpdate" value="0.05" />	
		<param name="xmin" value="-20" />	
		<param name="ymin" value="-20" />
		<param name="xmax" value="20" />	
		<param name="ymax" value="20" />
		<param name="maxUrange" value="6" />		
	</node>
-->
    
</launch>
=======
<launch>

    <!-- Make sure simulated time is on -->
    <param name="/use_sim_time" value="True" />
    
 	<!-- Use the joint state publisher and robot state publisher so we can see the robot in RViz. -->
	<param name="robot_description" command="cat $(find pi_robot)/urdf/pi_robot_urdf.xml" />
	<param name="/use_gui" value="False" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" /> 
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" />
     
</launch>
>>>>>>> .r85
