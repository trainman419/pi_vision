<launch>

    <!--
   <node name="pi_robot_teleop" pkg="pi_robot" type="pi_robot_teleop.py" output="screen" />
    -->
    
	<param name="robot_description" command="$(find xacro)/xacro.py '$(find pi_robot)/urdf/pi_robot.urdf.xacro'" />
    <param name="/use_gui" value="False" />
    <param name="/use_sim_time" value="False" />

    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" />
    
  	<!-- Run the map server with a blank map -->
  	<node name="map_server" pkg="map_server" type="map_server" args="$(find pi_robot)/maps/blank_map.yaml"/>

 	<!-- Run fake localization -->
  	<node pkg="fake_localization" type="fake_localization" name="fake_localization" output="screen" />
    
    <!-- For fake localization we need static transforms between /odom and /map and /map and /world -->
    <node pkg="tf" type="static_transform_publisher" name="odom_map_broadcaster" args="0 0 0 0 0 0 /odom /map 100" />
    <node pkg="tf" type="static_transform_publisher" name="world_map_broadcaster" args="0 0 0 0 0 0 /map /world 100" />
    
   	<!-- Fire up the Serializer -->
    <node name="serializer" pkg="serializer" type="serializer_node.py">
       <rosparam file="$(find pi_robot)/params/serializer_params.yaml" command="load" />
    </node>
        
    <!-- Comment if using the base controller. -->
    <!--
    <node pkg="tf" type="static_transform_publisher" name="odom_base_link_broadcaster" args="0 0 0 0 0 0 /odom /base_link 100" />
    -->
 	
    <!--
    <node name="pi_arbotix" pkg="pi_arbotix" type="arbotix-node.py">
       <rosparam file="$(find pi_robot)/params/params_arbotix.yaml" command="load" />
    </node>
    -->

	<!-- Bring up the laser scanner -->
	<!--
    <node name="hokuyo" pkg="hokuyo_node" type="hokuyo_node">
    	<remap from="scan" to="base_scan" />
    	<param name="hokuyo_node/calibrate_time" value="False" />
    	<param name="frame_id" value="base_laser" />
    </node>
	-->
	
    <!-- Launch move_base and load all the costmap parameters for use with the base_local_planner -->
    <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
	    <rosparam file="$(find pi_robot)/params/costmap_common_params.yaml" command="load" ns="global_costmap" />
	    <rosparam file="$(find pi_robot)/params/costmap_common_params.yaml" command="load" ns="local_costmap" />
	    <rosparam file="$(find pi_robot)/params/local_costmap_params.yaml" command="load" />
	    <rosparam file="$(find pi_robot)/params/global_costmap_params.yaml" command="load" />
	    <rosparam file="$(find pi_robot)/params/base_local_planner_params.yaml" command="load" />
	</node>
     
</launch>
