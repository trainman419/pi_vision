/* Auto-generated by genmsg_cpp for file /home/patrick/Eclipse/ros/pi-robot-ros-stack/serializer/srv/GetDigital.srv */
#ifndef SERIALIZER_SERVICE_GETDIGITAL_H
#define SERIALIZER_SERVICE_GETDIGITAL_H
#include <string>
#include <vector>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/message.h"
#include "ros/time.h"

#include "ros/service_traits.h"




namespace serializer
{
template <class ContainerAllocator>
struct GetDigitalRequest_ : public ros::Message
{
  typedef GetDigitalRequest_<ContainerAllocator> Type;

  GetDigitalRequest_()
  : pin(0)
  {
  }

  GetDigitalRequest_(const ContainerAllocator& _alloc)
  : pin(0)
  {
  }

  typedef uint8_t _pin_type;
  uint8_t pin;


private:
  static const char* __s_getDataType_() { return "serializer/GetDigitalRequest"; }
public:
  ROSCPP_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROSCPP_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "41386d6ac585eedbab7b4d4f9192cbcc"; }
public:
  ROSCPP_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROSCPP_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "ad28e4611c3edea82d59f9c3743bc9b7"; }
public:
  ROSCPP_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROSCPP_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "uint8 pin\n\
\n\
"; }
public:
  ROSCPP_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROSCPP_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROSCPP_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    ros::serialization::serialize(stream, pin);
    return stream.getData();
  }

  ROSCPP_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    ros::serialization::deserialize(stream, pin);
    return stream.getData();
  }

  ROSCPP_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    size += ros::serialization::serializationLength(pin);
    return size;
  }

  typedef boost::shared_ptr< ::serializer::GetDigitalRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::serializer::GetDigitalRequest_<ContainerAllocator>  const> ConstPtr;
}; // struct GetDigitalRequest
typedef  ::serializer::GetDigitalRequest_<std::allocator<void> > GetDigitalRequest;

typedef boost::shared_ptr< ::serializer::GetDigitalRequest> GetDigitalRequestPtr;
typedef boost::shared_ptr< ::serializer::GetDigitalRequest const> GetDigitalRequestConstPtr;


template <class ContainerAllocator>
struct GetDigitalResponse_ : public ros::Message
{
  typedef GetDigitalResponse_<ContainerAllocator> Type;

  GetDigitalResponse_()
  : value(0)
  {
  }

  GetDigitalResponse_(const ContainerAllocator& _alloc)
  : value(0)
  {
  }

  typedef uint8_t _value_type;
  uint8_t value;


private:
  static const char* __s_getDataType_() { return "serializer/GetDigitalResponse"; }
public:
  ROSCPP_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROSCPP_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "e4da51e86d3bac963ee2bb1f41031407"; }
public:
  ROSCPP_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROSCPP_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "ad28e4611c3edea82d59f9c3743bc9b7"; }
public:
  ROSCPP_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROSCPP_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "uint8 value\n\
\n\
\n\
"; }
public:
  ROSCPP_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROSCPP_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROSCPP_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    ros::serialization::serialize(stream, value);
    return stream.getData();
  }

  ROSCPP_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    ros::serialization::deserialize(stream, value);
    return stream.getData();
  }

  ROSCPP_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    size += ros::serialization::serializationLength(value);
    return size;
  }

  typedef boost::shared_ptr< ::serializer::GetDigitalResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::serializer::GetDigitalResponse_<ContainerAllocator>  const> ConstPtr;
}; // struct GetDigitalResponse
typedef  ::serializer::GetDigitalResponse_<std::allocator<void> > GetDigitalResponse;

typedef boost::shared_ptr< ::serializer::GetDigitalResponse> GetDigitalResponsePtr;
typedef boost::shared_ptr< ::serializer::GetDigitalResponse const> GetDigitalResponseConstPtr;

struct GetDigital
{

typedef GetDigitalRequest Request;
typedef GetDigitalResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct GetDigital
} // namespace serializer

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator>
struct MD5Sum< ::serializer::GetDigitalRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "41386d6ac585eedbab7b4d4f9192cbcc";
  }

  static const char* value(const  ::serializer::GetDigitalRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x41386d6ac585eedbULL;
  static const uint64_t static_value2 = 0xab7b4d4f9192cbccULL;
};

template<class ContainerAllocator>
struct DataType< ::serializer::GetDigitalRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "serializer/GetDigitalRequest";
  }

  static const char* value(const  ::serializer::GetDigitalRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::serializer::GetDigitalRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "uint8 pin\n\
\n\
";
  }

  static const char* value(const  ::serializer::GetDigitalRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::serializer::GetDigitalRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator>
struct MD5Sum< ::serializer::GetDigitalResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "e4da51e86d3bac963ee2bb1f41031407";
  }

  static const char* value(const  ::serializer::GetDigitalResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xe4da51e86d3bac96ULL;
  static const uint64_t static_value2 = 0x3ee2bb1f41031407ULL;
};

template<class ContainerAllocator>
struct DataType< ::serializer::GetDigitalResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "serializer/GetDigitalResponse";
  }

  static const char* value(const  ::serializer::GetDigitalResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::serializer::GetDigitalResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "uint8 value\n\
\n\
\n\
";
  }

  static const char* value(const  ::serializer::GetDigitalResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::serializer::GetDigitalResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::serializer::GetDigitalRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.pin);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct GetDigitalRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::serializer::GetDigitalResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.value);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct GetDigitalResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<serializer::GetDigital> {
  static const char* value() 
  {
    return "ad28e4611c3edea82d59f9c3743bc9b7";
  }

  static const char* value(const serializer::GetDigital&) { return value(); } 
};

template<>
struct DataType<serializer::GetDigital> {
  static const char* value() 
  {
    return "serializer/GetDigital";
  }

  static const char* value(const serializer::GetDigital&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<serializer::GetDigitalRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "ad28e4611c3edea82d59f9c3743bc9b7";
  }

  static const char* value(const serializer::GetDigitalRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<serializer::GetDigitalRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "serializer/GetDigital";
  }

  static const char* value(const serializer::GetDigitalRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<serializer::GetDigitalResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "ad28e4611c3edea82d59f9c3743bc9b7";
  }

  static const char* value(const serializer::GetDigitalResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<serializer::GetDigitalResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "serializer/GetDigital";
  }

  static const char* value(const serializer::GetDigitalResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // SERIALIZER_SERVICE_GETDIGITAL_H

