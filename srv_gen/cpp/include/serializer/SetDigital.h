/* Auto-generated by genmsg_cpp for file /home/patrick/Eclipse/ros/pi-robot-ros-stack/serializer/srv/SetDigital.srv */
#ifndef SERIALIZER_SERVICE_SETDIGITAL_H
#define SERIALIZER_SERVICE_SETDIGITAL_H
#include <string>
#include <vector>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/message.h"
#include "ros/time.h"

#include "ros/service_traits.h"




namespace serializer
{
template <class ContainerAllocator>
struct SetDigitalRequest_ : public ros::Message
{
  typedef SetDigitalRequest_<ContainerAllocator> Type;

  SetDigitalRequest_()
  : id(0)
  , value(0)
  {
  }

  SetDigitalRequest_(const ContainerAllocator& _alloc)
  : id(0)
  , value(0)
  {
  }

  typedef uint8_t _id_type;
  uint8_t id;

  typedef uint8_t _value_type;
  uint8_t value;


private:
  static const char* __s_getDataType_() { return "serializer/SetDigitalRequest"; }
public:
  ROSCPP_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROSCPP_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "2c0a30c21df4c67ada80a070b214dcdc"; }
public:
  ROSCPP_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROSCPP_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "2c0a30c21df4c67ada80a070b214dcdc"; }
public:
  ROSCPP_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROSCPP_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "uint8 id\n\
uint8 value\n\
\n\
"; }
public:
  ROSCPP_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROSCPP_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROSCPP_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    ros::serialization::serialize(stream, id);
    ros::serialization::serialize(stream, value);
    return stream.getData();
  }

  ROSCPP_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    ros::serialization::deserialize(stream, id);
    ros::serialization::deserialize(stream, value);
    return stream.getData();
  }

  ROSCPP_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    size += ros::serialization::serializationLength(id);
    size += ros::serialization::serializationLength(value);
    return size;
  }

  typedef boost::shared_ptr< ::serializer::SetDigitalRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::serializer::SetDigitalRequest_<ContainerAllocator>  const> ConstPtr;
}; // struct SetDigitalRequest
typedef  ::serializer::SetDigitalRequest_<std::allocator<void> > SetDigitalRequest;

typedef boost::shared_ptr< ::serializer::SetDigitalRequest> SetDigitalRequestPtr;
typedef boost::shared_ptr< ::serializer::SetDigitalRequest const> SetDigitalRequestConstPtr;


template <class ContainerAllocator>
struct SetDigitalResponse_ : public ros::Message
{
  typedef SetDigitalResponse_<ContainerAllocator> Type;

  SetDigitalResponse_()
  {
  }

  SetDigitalResponse_(const ContainerAllocator& _alloc)
  {
  }


private:
  static const char* __s_getDataType_() { return "serializer/SetDigitalResponse"; }
public:
  ROSCPP_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROSCPP_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "d41d8cd98f00b204e9800998ecf8427e"; }
public:
  ROSCPP_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROSCPP_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "2c0a30c21df4c67ada80a070b214dcdc"; }
public:
  ROSCPP_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROSCPP_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "\n\
\n\
\n\
"; }
public:
  ROSCPP_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROSCPP_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROSCPP_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    return stream.getData();
  }

  ROSCPP_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    return stream.getData();
  }

  ROSCPP_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    return size;
  }

  typedef boost::shared_ptr< ::serializer::SetDigitalResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::serializer::SetDigitalResponse_<ContainerAllocator>  const> ConstPtr;
}; // struct SetDigitalResponse
typedef  ::serializer::SetDigitalResponse_<std::allocator<void> > SetDigitalResponse;

typedef boost::shared_ptr< ::serializer::SetDigitalResponse> SetDigitalResponsePtr;
typedef boost::shared_ptr< ::serializer::SetDigitalResponse const> SetDigitalResponseConstPtr;

struct SetDigital
{

typedef SetDigitalRequest Request;
typedef SetDigitalResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct SetDigital
} // namespace serializer

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator>
struct MD5Sum< ::serializer::SetDigitalRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "2c0a30c21df4c67ada80a070b214dcdc";
  }

  static const char* value(const  ::serializer::SetDigitalRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x2c0a30c21df4c67aULL;
  static const uint64_t static_value2 = 0xda80a070b214dcdcULL;
};

template<class ContainerAllocator>
struct DataType< ::serializer::SetDigitalRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "serializer/SetDigitalRequest";
  }

  static const char* value(const  ::serializer::SetDigitalRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::serializer::SetDigitalRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "uint8 id\n\
uint8 value\n\
\n\
";
  }

  static const char* value(const  ::serializer::SetDigitalRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::serializer::SetDigitalRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator>
struct MD5Sum< ::serializer::SetDigitalResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "d41d8cd98f00b204e9800998ecf8427e";
  }

  static const char* value(const  ::serializer::SetDigitalResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xd41d8cd98f00b204ULL;
  static const uint64_t static_value2 = 0xe9800998ecf8427eULL;
};

template<class ContainerAllocator>
struct DataType< ::serializer::SetDigitalResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "serializer/SetDigitalResponse";
  }

  static const char* value(const  ::serializer::SetDigitalResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::serializer::SetDigitalResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
\n\
\n\
";
  }

  static const char* value(const  ::serializer::SetDigitalResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::serializer::SetDigitalResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::serializer::SetDigitalRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.id);
    stream.next(m.value);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct SetDigitalRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::serializer::SetDigitalResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct SetDigitalResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<serializer::SetDigital> {
  static const char* value() 
  {
    return "2c0a30c21df4c67ada80a070b214dcdc";
  }

  static const char* value(const serializer::SetDigital&) { return value(); } 
};

template<>
struct DataType<serializer::SetDigital> {
  static const char* value() 
  {
    return "serializer/SetDigital";
  }

  static const char* value(const serializer::SetDigital&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<serializer::SetDigitalRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "2c0a30c21df4c67ada80a070b214dcdc";
  }

  static const char* value(const serializer::SetDigitalRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<serializer::SetDigitalRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "serializer/SetDigital";
  }

  static const char* value(const serializer::SetDigitalRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<serializer::SetDigitalResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "2c0a30c21df4c67ada80a070b214dcdc";
  }

  static const char* value(const serializer::SetDigitalResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<serializer::SetDigitalResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "serializer/SetDigital";
  }

  static const char* value(const serializer::SetDigitalResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // SERIALIZER_SERVICE_SETDIGITAL_H

